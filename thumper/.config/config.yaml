output_dir: output.thumper
basename: thumper-output
#experiment_suffix: ""
logs_dir: logs
#sigs_dir: "sigs" #default: sigs_dir is under out_dir. Optionally enable user to specify a sigs dir?

pipeline: taxonomic_classification_gtdb

### default settings 
default_input_type: protein

protein_scaled: 100
nucleotide_scaled: 1000
search_threshold: 0.001

# minimum fraction of hashes that must be identified to classify a genome
min_f_ident: 0.1

# minimum fraction of hashes that must be classified as lineage to -> genome
min_f_major: 0.2

# defaults for each alphabet 
alphabet_defaults:
  nucleotide: 
    ksizes: [21] #,31,51]
    scaled: 1000
    alpha_cmd: "--dna"
    ksize_multiplier: 1
  protein:
    ksizes: [11]
    scaled: 100
    alpha_cmd: "--protein"
    ksize_multiplier: 3
  dayhoff:
    ksizes: [19]
    scaled: 100
    alpha_cmd: "--dayhoff"
    ksize_multiplier: 3
  hp:
    ksizes: [33] #, 42]
    scaled: 100
    alpha_cmd: "--hp"
    ksize_multiplier: 3

## rule params ##
sourmash_sketch:
  output_dir: signatures
  output_files:
    - "{sample}.sig"

sourmash_search_containment:
  output_dir: search
  output_files:
    - "{sample}.x.{database}.matches.csv"
    - "{sample}.x.{database}.matches.sig"
    - "{sample}.x.{database}.matches.txt"
  databases:
   - gtdb.rep_genus

contigs_taxonomy:
  output_dir: classify
  output_files:
    - '{sample}.x.{database}.contigs-tax.json'

make_hit_list:
  output_dir: classify
  output_files:
    - "{db_name}.hit_list_for_filtering.csv"

#thumper_classify:
  # output_files:
    #- "{basename}.x.{database}.classified.csv" --> final classification summary

## index snakefile ##
signames_to_file:
  output_dir: index
  output_files:
    - "{basename}.signatures.txt"

sourmash_index_sbt:
  output_dir: index
  output_files:
    - "{basename}.{index-name}.sbt.zip" # "index name" needs to include alphabet, ksize 

## not currently in use ##
sourmash_gather:
  output_dir: gather
  output_files:
    - "{sample}.x.{database}.gather-matches.csv"
    - "{sample}.x.{database}.gather-matches.sig"
    - "{sample}.x.{database}.gather-matches.txt"
    - "{sample}.x.{database}.gather-unassigned.sig"
  databases:
   - gtdb.rep_genus

contig_classify:
  output_dir: classify
  output_files:
    - "{sample}.x.{database}.clean.fa.gz" 
    - "{sample}.x.{database}.dirty.fa.gz" 
    - "{sample}.x.{database}.report.txt" 
    - "{sample}.x.{database}.contigs.csv" 
    - "{sample}.x.{database}.summary.csv"
  databases:
   - gtdb.rep_genus

